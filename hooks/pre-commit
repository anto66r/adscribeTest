#!/bin/bash

PROJECT_PATH=$(git rev-parse --show-toplevel)
echo " ---- Hooked pre-commit: Fasten your seat belt ---- "
echo -ne 'ðŸ”µ Executing Clientside ESLint          - 1/4\r'
cd $PROJECT_PATH/client

for file in $(git diff --name-only --cached src | grep -E '\.(js|jsx|ts|tsx)$' | cut -d '/' -f2-)
do

  if test -f "$file"; then
    node_modules/.bin/eslint "$file" --quiet # we only want to lint the staged changes, not any un-staged changes
    if [ $? -ne 0 ]; then
      echo "ðŸ™€ ESLint failed on staged file /client/$file - Please check your code and try again"
      exit 1 # exit with failure status
    fi
  fi

done
echo -ne 'âœ…  Executed Clientside ESLint          - 1/4 \r'
echo -ne '\n'


cd $PROJECT_PATH/server
echo -ne 'ðŸ”µ Executing Serverside ESLint          - 2/4 \r'

for file in $(git diff --name-only --cached src | grep -E '\.(js|jsx|ts|tsx)$' | cut -d '/' -f2-)
do

  if test -f "$file"; then
    node_modules/.bin/eslint "$file" --quiet  # we only want to lint the staged changes, not any un-staged changes
    if [ $? -ne 0 ]; then
      echo "ðŸ™€ ESLint failed on staged file /server/$file - Please check your code and try again"
      exit 1 # exit with failure status
    fi
  fi

done
echo -ne 'âœ…  Executed Serverside ESLint          - 2/4 \r'
echo -ne '\n'


echo -ne 'ðŸ”µ Executing Clientside JEST tests     - 3/4 \r'


cd $PROJECT_PATH/client
BIN_PATH="$(git rev-parse --show-toplevel)/client/node_modules/.bin"
JEST="$BIN_PATH/jest"
JEST_RESULT="./node_modules/react-scripts/bin/react-scripts.js test --watchAll=false --bail --reporters=jest-silent-reporter --silent --colors"
$JEST_RESULT
if [ $? -ne 0 ]; then
  printf "\nðŸ™€ Clientside Jest failed. Fix test errors and try again!\n"
  exit 1 # exit with failure status
fi


echo -ne 'âœ…  Executed Clientside JEST tests      - 3/4 \r'
echo -ne '\n'

echo -ne 'ðŸ”µ Executing Serverside Jasmine tests  - 4/4 \r'
cd $PROJECT_PATH/server


VALID="$(node_modules/ts-node/dist/bin.js -r tsconfig-paths/register ./test)"
if [[ $VALID == *error* ]]; then
  printf "$VALID"
  printf "\nðŸ™€ Serverside Tests failed! Fix test errors and try again!\n"
  exit 1
fi
echo 'âœ…  Executed Serverside Jasmine tests   - 4/4'

echo "ðŸŽ‰ All tests working, Good job! commiting now!"
